{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","requiredvalue","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","DisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57bd4cba.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                // login\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input \r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email} \r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input \r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                requiredvalue={password} \r\n                className=\"authInput\"\r\n                onChange={onChange}\r\n            />\r\n            <input \r\n                type=\"submit\" \r\n                className=\"authInput authSubmit\"\r\n                value={newAccount ? \"Create Account\" : \"Login\"}/>\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Login\" : \"Create Account\"}\r\n        </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target:{name}\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return(\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n)};;\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const{\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing \r\n                    ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input \r\n                                onChange={onChange} \r\n                                type=\"text\" \r\n                                placeholder=\"Edit your nwet\" \r\n                                value ={newNweet} \r\n                                autoFocus\r\n                                required\r\n                                className=\"formInput\"\r\n                            />\r\n                            <input \r\n                                type=\"submit\" \r\n                                value=\"Update Nweet\" \r\n                                className=\"formBtn\" \r\n                            />\r\n                        </form>\r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </span>\r\n                    </>\r\n                    ) \r\n                    : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await fileRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(), \r\n            creatorId: userObj.uid,\r\n            attachmentUrl, \r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { \r\n            target: {value}\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result }, \r\n            } = finishedEvent;\r\n            setAttachment(result)\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n            <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n            <input \r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} \r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => { \r\n\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet} \r\n                        isOwner={nweet.creatorId === userObj.uid} \r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.DisplayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    return (\r\n    <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n                onChange={onChange} \r\n                className=\"formInput\" \r\n                autoFocus \r\n                type=\"text\" \r\n                placeholder=\"Display Name\" \r\n                value={newDisplayName} \r\n            />\r\n            <input \r\n                type=\"submit\" \r\n                value=\"Update Profile\" \r\n                className=\"formBtn\" \r\n                style={{\r\n                    marginTop: 10,\r\n                }} \r\n            />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n        </span>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n<nav>\r\n<   ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                    ? `${userObj.displayName}의 Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                { isLoggedIn ? (\r\n                <div\r\n                    style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <Route exact path = \"/\">\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path = \"/profile\">\r\n                        <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </div> \r\n                ) : (\r\n                <>\r\n                <Route exact path = \"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}