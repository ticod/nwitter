{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","requiredvalue","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","alt","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","DisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2badf57.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                // login\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email} \r\n                onChange={onChange}\r\n            />\r\n            <input \r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                requiredvalue={password} \r\n                onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Login\"}/>\r\n            {error}\r\n        </form>\r\n        <span onClick={toggleAccount}>{newAccount ? \"Login\" : \"Create Account\"}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target:{name}\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n            </div>\r\n        </div>\r\n)};;\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const{\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                editing \r\n                    ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit}>\r\n                            <input onChange={onChange} type=\"text\" placeholder=\"Edit your nwet\" value ={newNweet} required />\r\n                            <input type=\"submit\" value=\"Update Nweet\" />\r\n                        </form>\r\n                        <button onClick={toggleEditing}>Cancel</button>\r\n                    </>\r\n                    ) \r\n                    : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && (\r\n                            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                        )}\r\n                        {isOwner && (\r\n                            <>\r\n                                <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                                <button onClick={toggleEditing}>Edit Nweet</button>\r\n                            </>\r\n                        )}\r\n                    </>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await fileRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(), \r\n            creatorId: userObj.uid,\r\n            attachmentUrl, \r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { \r\n            target: {value}\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result }, \r\n            } = finishedEvent;\r\n            setAttachment(result)\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearPhotoClick = () => {\r\n        setAttachment(null);\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input value={nweet} type=\"text\" placeholder=\"What' on your mind?\" maxLength={120} onChange={onChange} />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" alt=\"profile\" />\r\n                    <button onClick={onClearPhotoClick}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => { \r\n\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n        <NweetFactory userObj={userObj} />\r\n        <div>\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet} \r\n                        isOwner={nweet.creatorId === userObj.uid} \r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.DisplayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    return (\r\n    <>\r\n    <form onSubmit={onSubmit}>\r\n        <input onChange={onChange} type=\"text\" placeholder=\"Display Name\" value={newDisplayName} />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n    </form>\r\n        <button onClick={onLogOutClick}>Logout</button>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n<nav>\r\n    <ul>\r\n        <li>\r\n            <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                { isLoggedIn ? (\r\n                <>\r\n                <Route exact path = \"/\">\r\n                    <Home userObj={userObj} />\r\n                </Route>\r\n                <Route exact path = \"/profile\">\r\n                    <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n                </> \r\n                ) : (\r\n                <>\r\n                <Route exact path = \"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}